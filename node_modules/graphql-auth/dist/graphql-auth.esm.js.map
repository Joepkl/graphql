{"version":3,"file":"graphql-auth.esm.js","sources":["../src/index.ts"],"sourcesContent":["type Resolver = (parent: any, params: any, context: any, info: any) => any;\n\nfunction validateScope(required: string[], provided: string[]): boolean {\n  let hasScope = false;\n\n  required.forEach((scope: string) => {\n    provided.forEach(function(providedScope: string) {\n      // user:* -> user:create, user:view:self\n      var regex = new RegExp('^' + providedScope.replace('*', '.*') + '$');\n      if (regex.exec(scope)) {\n        hasScope = true;\n      }\n    });\n  });\n\n  return hasScope;\n}\n\nexport default function withAuth(scope: any, callback?: any) {\n  const next: Resolver = callback ? callback : scope;\n\n  return async function(_: any, __: any, context: any, info: any) {\n    // will hold resolved scope, if any\n    let finalScope;\n\n    // if no auth object on context in resolver, error out\n    if (!context.auth) {\n      return new Error('`auth` property not found on context!');\n    }\n\n    // if user is not authenticated, error out\n    if (!context.auth.isAuthenticated) {\n      return new Error('Not authenticated!');\n    }\n\n    // determine if we need to check scopes\n    const hasScope = !!callback;\n    if (hasScope) {\n      // check if scope is a function that resolves to required scopes\n      if (typeof scope === 'function') {\n        // we wrap the function in a promise so whether scope resolver is async or not we can handle it like it is\n        finalScope = await Promise.resolve(() => scope(_, __, context, info));\n      } else {\n        finalScope = scope;\n      }\n\n      if (finalScope && finalScope.length) {\n        if (\n          !context.auth.scope ||\n          !validateScope(finalScope, context.auth.scope)\n        ) {\n          return new Error('Permission denied!');\n        }\n      }\n    }\n\n    return next(_, __, context, info);\n  };\n}\n"],"names":["validateScope","required","provided","hasScope","forEach","scope","providedScope","regex","RegExp","replace","exec","withAuth","callback","next","_","__","context","info","finalScope","auth","Error","isAuthenticated","length","Promise","resolve"],"mappings":"AAEA,SAASA,aAAT,CAAuBC,QAAvB,EAA2CC,QAA3C;AACE,MAAIC,QAAQ,GAAG,KAAf;AAEAF,EAAAA,QAAQ,CAACG,OAAT,CAAiB,UAACC,KAAD;AACfH,IAAAA,QAAQ,CAACE,OAAT,CAAiB,UAASE,aAAT;AACf;AACA,UAAIC,KAAK,GAAG,IAAIC,MAAJ,CAAW,MAAMF,aAAa,CAACG,OAAd,CAAsB,GAAtB,EAA2B,IAA3B,CAAN,GAAyC,GAApD,CAAZ;;AACA,UAAIF,KAAK,CAACG,IAAN,CAAWL,KAAX,CAAJ,EAAuB;AACrBF,QAAAA,QAAQ,GAAG,IAAX;AACD;AACF,KAND;AAOD,GARD;AAUA,SAAOA,QAAP;AACD;;SAEuBQ,SAASN,OAAYO;AAC3C,MAAMC,IAAI,GAAaD,QAAQ,GAAGA,QAAH,GAAcP,KAA7C;AAEA,mBAAsBS,CAAtB,EAA8BC,EAA9B,EAAuCC,OAAvC,EAAqDC,IAArD;AAAA;;kCAmCSJ,IAAI,CAACC,CAAD,EAAIC,EAAJ,EAAQC,OAAR,EAAiBC,IAAjB;;;;AAlCX;AACA,UAAIC,UAAJ;;AAGA,UAAI,CAACF,OAAO,CAACG,IAAb,EAAmB;AACjB,+BAAO,IAAIC,KAAJ,CAAU,uCAAV,CAAP;AACD;;;AAGD,UAAI,CAACJ,OAAO,CAACG,IAAR,CAAaE,eAAlB,EAAmC;AACjC,+BAAO,IAAID,KAAJ,CAAU,oBAAV,CAAP;AACD;;;AAGD,UAAMjB,QAAQ,GAAG,CAAC,CAACS,QAAnB;;;YACIT;;gBASEe,UAAU,IAAIA,UAAU,CAACI;kBAEzB,CAACN,OAAO,CAACG,IAAR,CAAad,KAAd,IACA,CAACL,aAAa,CAACkB,UAAD,EAAaF,OAAO,CAACG,IAAR,CAAad,KAA1B;;uBAEP,IAAIe,KAAJ,CAAU,oBAAV;;;;;;gBAZP,OAAOf,KAAP,KAAiB;AACnB;qCACmBkB,OAAO,CAACC,OAAR,CAAgB;AAAA,uBAAMnB,KAAK,CAACS,CAAD,EAAIC,EAAJ,EAAQC,OAAR,EAAiBC,IAAjB,CAAX;AAAA,eAAhB;AAAnBC,gBAAAA,UAAU,mBAAV;;;AAEAA,cAAAA,UAAU,GAAGb,KAAb;;;;AALF;;;;;;AAmBH,KApCD;AAAA;AAAA;AAAA;AAqCD;;;;"}