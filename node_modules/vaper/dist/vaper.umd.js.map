{"version":3,"file":"vaper.umd.js","sources":["../src/index.ts"],"sourcesContent":["import isArray from 'lodash.isarray'\nimport isObject from 'lodash.isobject'\n\nclass Vaper {\n  public parseArray = (replaceFrom: any, replaceWith: any) => (array: any) =>\n    array.map((v: any) => {\n      if (isArray(v)) {\n        return this.parseArray(replaceFrom, replaceWith)(v)\n      }\n      if (isObject(v)) {\n        return this.parseObject(replaceFrom, replaceWith)(v)\n      }\n\n      return this.valueReplacer(replaceFrom, replaceWith)(v)\n    })\n\n  public parseObject = (replaceFrom: any, replaceWith: any) => (\n    object: any\n  ) => {\n    /**\n     * Recursive function that change object deeply.\n     * @param {Object} child data object child value to convert.\n     */\n    const recursive = (child: any) => {\n      const newObject: { [key: string]: any } = {}\n\n      Object.keys(child).map((k) => {\n        const value = child[k]\n\n        if (isArray(value)) {\n          newObject[k] = this.parseArray(replaceFrom, replaceWith)(value)\n        } else if (isObject(value)) {\n          newObject[k] = recursive(value)\n        } else {\n          newObject[k] = this.valueReplacer(replaceFrom, replaceWith)(value)\n        }\n\n        return true\n      })\n\n      return newObject\n    }\n\n    return recursive(object)\n  }\n\n  public valueReplacer = (replaceFrom: any, replaceWith: any) => (\n    value: any\n  ) => {\n    if (value === replaceFrom) return replaceWith\n    return value\n  }\n}\n\nconst vaper = new Vaper()\n\nexport default (replaceFrom: any, replaceWith: any) => (data: any) => {\n  if (isArray(data)) return vaper.parseArray(replaceFrom, replaceWith)(data)\n  if (isObject(data)) return vaper.parseObject(replaceFrom, replaceWith)(data)\n\n  return vaper.valueReplacer(replaceFrom, replaceWith)(data)\n}\n"],"names":[],"mappings":";;;;;;;;;EAGA;MAAA;UAAA,iBAiDC;UAhDQ,eAAU,GAAG,UAAC,WAAgB,EAAE,WAAgB,IAAK,OAAA,UAAC,KAAU;cACrE,OAAA,KAAK,CAAC,GAAG,CAAC,UAAC,CAAM;kBACf,IAAI,OAAO,CAAC,CAAC,CAAC,EAAE;sBACd,OAAO,KAAI,CAAC,UAAU,CAAC,WAAW,EAAE,WAAW,CAAC,CAAC,CAAC,CAAC,CAAA;mBACpD;kBACD,IAAI,QAAQ,CAAC,CAAC,CAAC,EAAE;sBACf,OAAO,KAAI,CAAC,WAAW,CAAC,WAAW,EAAE,WAAW,CAAC,CAAC,CAAC,CAAC,CAAA;mBACrD;kBAED,OAAO,KAAI,CAAC,aAAa,CAAC,WAAW,EAAE,WAAW,CAAC,CAAC,CAAC,CAAC,CAAA;eACvD,CAAC;WAAA,GAAA,CAAA;UAEG,gBAAW,GAAG,UAAC,WAAgB,EAAE,WAAgB,IAAK,OAAA,UAC3D,MAAW;;;;;cAMX,IAAM,SAAS,GAAG,UAAC,KAAU;kBAC3B,IAAM,SAAS,GAA2B,EAAE,CAAA;kBAE5C,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,UAAC,CAAC;sBACvB,IAAM,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC,CAAA;sBAEtB,IAAI,OAAO,CAAC,KAAK,CAAC,EAAE;0BAClB,SAAS,CAAC,CAAC,CAAC,GAAG,KAAI,CAAC,UAAU,CAAC,WAAW,EAAE,WAAW,CAAC,CAAC,KAAK,CAAC,CAAA;uBAChE;2BAAM,IAAI,QAAQ,CAAC,KAAK,CAAC,EAAE;0BAC1B,SAAS,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC,KAAK,CAAC,CAAA;uBAChC;2BAAM;0BACL,SAAS,CAAC,CAAC,CAAC,GAAG,KAAI,CAAC,aAAa,CAAC,WAAW,EAAE,WAAW,CAAC,CAAC,KAAK,CAAC,CAAA;uBACnE;sBAED,OAAO,IAAI,CAAA;mBACZ,CAAC,CAAA;kBAEF,OAAO,SAAS,CAAA;eACjB,CAAA;cAED,OAAO,SAAS,CAAC,MAAM,CAAC,CAAA;WACzB,GAAA,CAAA;UAEM,kBAAa,GAAG,UAAC,WAAgB,EAAE,WAAgB,IAAK,OAAA,UAC7D,KAAU;cAEV,IAAI,KAAK,KAAK,WAAW;kBAAE,OAAO,WAAW,CAAA;cAC7C,OAAO,KAAK,CAAA;WACb,GAAA,CAAA;OACF;MAAD,YAAC;EAAD,CAAC,IAAA;EAED,IAAM,KAAK,GAAG,IAAI,KAAK,EAAE,CAAA;AAEzB,eAAe,UAAC,WAAgB,EAAE,WAAgB,IAAK,OAAA,UAAC,IAAS;MAC/D,IAAI,OAAO,CAAC,IAAI,CAAC;UAAE,OAAO,KAAK,CAAC,UAAU,CAAC,WAAW,EAAE,WAAW,CAAC,CAAC,IAAI,CAAC,CAAA;MAC1E,IAAI,QAAQ,CAAC,IAAI,CAAC;UAAE,OAAO,KAAK,CAAC,WAAW,CAAC,WAAW,EAAE,WAAW,CAAC,CAAC,IAAI,CAAC,CAAA;MAE5E,OAAO,KAAK,CAAC,aAAa,CAAC,WAAW,EAAE,WAAW,CAAC,CAAC,IAAI,CAAC,CAAA;EAC5D,CAAC,GAAA,EAAA;;;;;;;;"}